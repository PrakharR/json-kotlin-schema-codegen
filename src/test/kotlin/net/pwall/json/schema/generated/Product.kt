/*
 * Product.kt
 *
 * This code was generated by json-kotlin-schema-codegen - JSON Schema Code Generator
 * See https://github.com/pwall567/json-kotlin-schema-codegen
 *
 * It is not advisable to modify generated code as any modifications will be lost
 * when the generation process is re-run.
 */
package net.pwall.json.schema.generated

import java.math.BigDecimal

/**
 * A product from Acme's catalog
 */
data class Product(
    /** The unique identifier for a product */
    val productId: Long,
    /** Name of the product */
    val productName: String,
    /** The price of the product */
    val price: BigDecimal,
    /** Tags for the product */
    val tags: Set<String>? = null,
    val dimensions: Dimensions? = null,
    /** Coordinates of the warehouse where the product is located. */
    val warehouseLocation: GeographicalLocation? = null
) {

    init {
        require(price > BigDecimal.ZERO) { "price <= exclusive minimum 0 - $price" }
        if (tags != null)
            require(tags.isNotEmpty()) { "tags length < minimum 1 - ${tags.size}" }
    }

    data class Dimensions(
        val length: BigDecimal,
        val width: BigDecimal,
        val height: BigDecimal
    )

}
